datasource db {
    url      = env("DATABASE_URL")
    provider = "postgresql"
}

generator client {
    provider = "prisma-client-js"
}

model Member {
    id         BigInt @id @default(autoincrement())
    externalId String @db.Uuid
    username   String @db.VarChar(32) @unique
    email      String @db.Text @unique
    firstName  String @db.VarChar(32)
    lastName   String @db.Text
    chapters   Chapter[]
    pages      Page[]
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model Chapter {
    id          BigInt   @id @default(autoincrement())
    externalId  String   @db.Uuid
    author      Member   @relation(fields: [authorId], references: [id])
    authorId    BigInt   @db.BigInt
    title       String
    pages       Page[]
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model Page {
    id              BigInt    @id @default(autoincrement())
    externalId      String    @db.Uuid
    author          Member    @relation(fields: [authorId], references: [id])
    authorId        BigInt    @db.BigInt
    chapter         Chapter   @relation(fields: [chapterId], references: [id])
    chapterId       BigInt    @db.BigInt
    contentFront    String    @db.Text
    contentBack     String    @db.Text
    learnRate       LearnRate?
    createdAt       DateTime  @db.Date @default(now())
    updatedAt       DateTime  @db.Date @updatedAt
}

model LearnRate {
    id            BigInt   @id @default(autoincrement())
    externalId    String   @db.Uuid
    page          Page     @relation(fields: [pageId], references: [id])
    pageId        BigInt   @db.BigInt @unique
    level         String
    answeredAt    DateTime @db.Date
    answerAgainAt DateTime @db.Date
    createdAt     DateTime @db.Date @default(now())
    updatedAt     DateTime @db.Date @updatedAt
}
